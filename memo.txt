4h:ロジックをテキストにしてみる
4h:実装
8h:メイン部分の実装
8h:ブラッシュアップ

==========================
==========================
落ち物パズル「Diamond Dash」のWebアプリを実装してください。
参考アプリ：Diamond Dash (https://itunes.apple.com/jp/app/diamond-dash/id461402734?mt=8)
♦♦進め方・概要
機能要件を2つに分け、実装フェーズを2つに分けます。

♦機能要件1
    「Diamond Dash」というアプリ（https://www.youtube.com/watch?v=ZvfUXELCHBw）と、ルールと挙動は同じ
    7 * 6 マスのグリッド
    各ジェム（パズルのピース）をタップした際に、同じジェムが3つ以上隣り合っていたら、ジェムを消してください。（アニメーション不要）
    ジェムを消したら、それらの上にあるジェムを下に落としてください（落ちるアニメーションはつけてください）
    表示されているジェムだけ落としてください
    画面外からはジェムを落とさなくて良いです
    開始時、ジェムの配置が毎回ランダムに変わる仕組みにしてください
♦機能要件2
    画面外からの追加ブロック落下
    ジェムが消えるエフェクト
    スコア
    スコア設計は任意
    60秒のタイムリミットと結果表示
♦チャレンジ要件
    ゲーム一時停止・再開
    一定時間入力なかった場合のヒント表示
    選択不可能な状態になった場合の救済処置（下段周辺のブロック変化）
♦評価ポイント
    見やすい（内容を把握しやすい、メンテナンスしやすい）コードになっているか
        適切にクラス設計されているか（動けばいいわけではない）
        オブジェクト指向になっているか
    操作時の爽快感
        ジェムの消え方や落ち方のタイミングやエフェクトなど
♦♦フェーズ
♦Phase1：ベーシックな機能実装
    機能要件にそってクラス設計（1日）
    設けるクラスと依存関係など定義（クラス図を作る or テキストベースでも可）
    クラス設計内容提出・FB・修正（1日）
    機能要件1の実装（7日）
    提出・FB（1日）
♦Phase2：機能追加
    Phase1のリファクタ＋機能要件2の実装（10日）
    提出・FB（1日）
    リファクタ（6日）
    提出・評価

余力があればチャレンジ要件も実装してください。



-------------------------------------
1.このゲームで管理すべきデータは何か？
2.データ同志はどのような関係を持つべきか？
3.データと深く結びつく処理はあるか？
ここまで考えるとModelクラスがなんとなく導出できると思います。
20:30
4.表示に必要な要素は何か？
5.要素同志の関係はどうあるべきか？
6.画像にすべきものとそうでないものは何か？
ここまで考えることができればHTMLとViewクラスがなんとなく導出できると思います。
20:41
7.Viewクラスはどのようにデータを持つべきか？
8.ユーザがゲームを操作する上で必要な動作は何か？
9.Viewに必要なイベントは何か？イベントが発生することによってモデルのデータはどのように変化すべきか？
ViewクラスとModelクラスの関係を洗い出した後、イベントを考えます。
イベントが発生した時にデータがどのように変わっていればゲームとして成り立つか考えます。
20:46
10.データが変化することによりViewはどう変化すべきか？
11.ゲームのルールが正しく機能しているか？
12.保存すべきデータはないか？
ここまでくればだいたいゲームが出来上がっている気がします。あとはCSSでみた目を整えればいい感じになると思います。
-------------------------------------
コード見てどうこうもありますが以下の質問にも答えられるようにしておいてください。
・使用したコード規約
・使用したライブラリとライブラリを選んだ理由
・JSのコードを減らすためにした工夫
・課題図書を読んで良かった箇所と今回の課題で活かすことができた部分
・作成したクラスの説明